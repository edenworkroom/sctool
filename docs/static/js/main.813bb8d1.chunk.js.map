{"version":3,"sources":["database/localstorage.js","component/loadform.js","views/loadcontract.js","component/plugin.js","component/abi.js","component/opform.js","views/opcontract.js","App.js","serviceWorker.js","index.js"],"names":["LocalStorage","key","data","window","localStorage","getItem","JSON","parse","index","removeItem","value","setItem","stringify","LinkedListStorage","prefix","db","this","headKey","genKey","tailKey","func","get","item","substring","lastIndexOf","prevKey","set","headItemKey","nextKey","nextItem","list","that","forEach","insert","_del","prevItem","_get","_set","val","delete","Storage","LoadContractForm","props","nameDecorator","form","getFieldDecorator","rules","required","addressDecorator","abiDecorator","validateFields","error","fail","setState","confirming","addr","test","e","address","name","abi","location","replace","getFieldProps","style","padding","renderHeader","clear","placeholder","ref","el","autoFocusInst","rows","type","onClick","submit","Component","LoadForm","createForm","LoadContract","height","document","documentElement","clientHeight","fontSize","color","Item","src","width","textAlign","config","contractAddress","github","author","url","href","logo","protocol","host","popup","init","BigNumber","require","one","Input","valueDecorator","input","MethodForm","executeData","contract","self","method","constant","call","callData","res","unPackData","refs","result","innerHTML","executeContract","from","amount","gasLimit","accountForm","args","inputs","push","serojs","callContract","packData","to","multipliedBy","toString","execute","estimateGas","alert","message","inputItems","methodName","map","className","float","inline","size","marginRight","paddingLeft","MForm","Abi","callItems","transactItems","operation","OpContractForm","formatAccount","pk","slice","showAccountList","options","state","accounts","balance","balances","text","onPress","setFieldsValue","account","showContractList","contracts","defaultContract","Map","defaultAccount","accountList","PK","Name","Balance","initialValue","OpForm","OpContract","App","link","paddingRight","handleLink","bind","exact","path","component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.813bb8d1.chunk.js","sourcesContent":["const plus = null;\n\nclass LocalStorage {\n\n    constructor() {\n    }\n\n    get(key) {\n        let data = window.localStorage.getItem(key);\n        if (data) {\n            return JSON.parse(data);\n        }\n    }\n\n    key(index) {\n        return window.localStorage.key(index);\n    }\n\n    delete(key) {\n        window.localStorage.removeItem(key);\n    }\n\n    set(key, value) {\n        if (value) {\n            window.localStorage.setItem(key, JSON.stringify(value))\n        }\n    }\n\n    has(key) {\n        let data = window.localStorage.getItem(key);\n        return !!data;\n    }\n}\n\nclass LinkedListStorage {\n\n    constructor(prefix, db) {\n        this.db = db;\n        this.prefix = prefix;\n        this.headKey = this.genKey(\"headkey\");\n        this.tailKey = this.genKey(\"tailKey\");\n    }\n\n    genKey(key) {\n        return this.prefix + \":\" + key;\n    }\n\n    forEach(func) {\n        let key = this.db.get(this.tailKey);\n        if (!key) {\n            return;\n        }\n        while (true) {\n            let item = this.db.get(key);\n            if (!item) {\n                return\n            }\n\n            if (func(item.value, key.substring(key.lastIndexOf(\":\") + 1))) {\n                break;\n            }\n            if (!item.prevKey) {\n                break;\n            }\n            key = item.prevKey;\n        }\n    }\n\n    insert(key, value) {\n        key = this.genKey(key);\n        let item = this.db.get(key)\n        if (item) {\n            item.value = value;\n            this.db.set(key, item);\n            return;\n        } else {\n            item = {value: value};\n        }\n\n        let headItemKey = this.db.get(this.headKey);\n        if (!headItemKey) {\n            this.db.set(this.tailKey, key);\n        } else {\n            item.nextKey = headItemKey;\n            let nextItem = this.db.get(item.nextKey);\n            nextItem.prevKey = key;\n            this.db.set(item.nextKey, nextItem);\n        }\n        this.db.set(this.headKey, key);\n        this.db.set(key, item);\n    }\n\n    insertList(list) {\n        let that = this;\n        list.forEach(function (item, index) {\n            that.insert(that.genKey(item.key), item.value);\n        });\n    }\n\n    remove(key) {\n        key = this.genKey(key);\n        let item = this._del(key);\n        if (!item) {\n            return;\n        }\n\n        let prevItem = this._get(item.prevKey);\n        let nextItem = this._get(item.nextKey);\n        if (!prevItem) {\n            this._set(this.headKey, item.nextKey);\n        } else {\n            prevItem.nextKey = item.nextKey;\n            this._set(item.prevKey, prevItem);\n        }\n        if (!nextItem) {\n            this._set(this.tailKey, item.prevKey);\n        } else {\n            nextItem.prevKey = item.prevKey;\n            this._set(item.nextKey, nextItem);\n        }\n        return item;\n    }\n\n    _get(key) {\n        if (!key) {\n            return;\n        }\n        return this.db.get(key);\n    }\n\n    _set(key, val) {\n        if (!key) {\n            return;\n        }\n        if (!val) {\n            this.db.delete(key);\n        } else {\n            this.db.set(key, val);\n        }\n    }\n\n    _del(key) {\n        if (!key) {\n            return;\n        }\n        let item = this.db.get(key);\n        this.db.delete(key);\n        return item;\n    }\n\n    get(key) {\n        if (!key) {\n            return;\n        }\n        key = this.genKey(key);\n        let val = this.db.get(key);\n        if (val) {\n            return val.value;\n        }\n    }\n}\n\nconst Storage = new LocalStorage();\nexport {Storage, LinkedListStorage}\n","import React, {Component} from 'react';\nimport {Storage, LinkedListStorage} from '../database/localstorage'\nimport {NavBar, Modal, Button, WhiteSpace, List, InputItem, TextareaItem, WingBlank, Toast} from 'antd-mobile';\nimport {createForm} from 'rc-form';\n\n\nclass LoadContractForm extends Component {\n    constructor(props) {\n        super(props);\n        this.db = new LinkedListStorage(\"SC\", Storage);\n        this.nameDecorator = this.props.form.getFieldDecorator('name', {\n            rules: [{required: true}],\n        });\n        this.addressDecorator = this.props.form.getFieldDecorator('address', {\n            rules: [{required: true,}],\n        });\n        this.abiDecorator = this.props.form.getFieldDecorator('abi', {\n            rules: [{required: true}],\n        });\n    }\n\n    submit() {\n        let that = this;\n        this.props.form.validateFields((error, value) => {\n            if (!value[\"address\"]) {\n                Toast.fail(\"Address is required!\", 1)\n                that.setState({\n                    confirming: false\n                });\n                return\n            } else {\n                let addr = value[\"address\"];\n                if (!/^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{80,}$/i.test(addr)) {\n                    Toast.fail(\"Address must be base58!\", 1)\n                    that.setState({\n                        confirming: false\n                    });\n                    return\n                }\n            }\n            if (!value[\"name\"]) {\n                Toast.fail(\"Name is required!\", 1)\n                that.setState({\n                    confirming: false\n                });\n                return\n            }\n            if (!value[\"abi\"]) {\n                Toast.fail(\"Abi is required!\", 1)\n                that.setState({\n                    confirming: false\n                });\n                return\n            } else {\n                try {\n                    JSON.parse(value[\"abi\"]);\n                } catch (e) {\n                    Toast.fail(\"Abi must be json!\", 1)\n                    that.setState({\n                        confirming: false\n                    });\n                    return\n                }\n            }\n            {\n                const address = value[\"address\"];\n                const name = value[\"name\"];\n                const abi = value[\"abi\"];\n                this.db.insert(address, {\"name\": name, abi: abi});\n                window.location.replace(\"#/op\");\n            }\n        })\n    }\n\n    render() {\n        const {getFieldProps} = this.props.form;\n        return (\n            <div style={{padding: '15px 0'}}>\n                <WingBlank>\n                    <List renderHeader={() => '智能合约名称:'}>\n                        {\n                            this.nameDecorator(\n                                <InputItem\n                                    clear\n                                    name={\"name\"}\n                                    placeholder=\"name\"\n                                    ref={el => this.autoFocusInst = el}\n                                />\n                            )\n                        }\n\n                    </List>\n\n                    <List renderHeader={() => '智能合约地址:'}>\n                        {\n                            this.addressDecorator(\n                                <TextareaItem\n                                    clear\n                                    name={\"address\"}\n                                    placeholder={\"address\"}\n                                    ref={el => this.autoFocusInst = el}\n                                    rows={3}\n                                />\n                            )\n                        }\n\n                    </List>\n                    <List renderHeader={() => '智能合约abi:'}>\n                        {\n                            this.abiDecorator(\n                                <TextareaItem\n                                    clear\n                                    name={\"abi\"}\n                                    placeholder={\"abi\"}\n                                    ref={el => this.autoFocusInst = el}\n                                    rows={3}\n                                />\n                            )\n                        }\n                    </List>\n                    <WhiteSpace/>\n                    <Button type=\"primary\" onClick={() => {\n                        this.submit()\n                    }}>加载</Button>\n                    <WhiteSpace/>\n                </WingBlank>\n            </div>\n        )\n    }\n}\n\nconst LoadForm = createForm()(LoadContractForm)\n\nexport default LoadForm\n\n","import React, {Component} from 'react';\nimport LoadForm from \"../component/loadform\";\nimport {Flex} from \"antd-mobile\";\n\nexport class LoadContract extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div style={{height: document.documentElement.clientHeight}}>\n                <div style={{padding: '50px 30px 10px 30px'}}>\n                    <span style={{fontSize: '18px', color: 'blue'}}>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;承接智能合约，手机钱包dapp开发。有意者联系作者，微信号见底部。\n                    </span>\n                </div>\n                <LoadForm/>\n                <div style={{padding: '0 15px'}}>\n                    <p>开发者：eden\n                        <br/>如对您有用，可以打赏，多谢您的支持。\n                        <br/> 如有问题请联系开发者。\n                    </p>\n                    <Flex>\n                        <Flex.Item>\n                            <img src=\"wc.jpeg\" width=\"150\" height=\"150\"></img>\n                            <p style={{textAlign: \"center\"}}>微信号</p>\n                        </Flex.Item>\n                        <Flex.Item>\n                            <img src=\"address.jpeg\" width=\"150\" height=\"150\"></img>\n                            <p style={{textAlign: \"center\"}}>收款码</p>\n                        </Flex.Item>\n                    </Flex>\n                </div>\n            </div>\n        )\n    }\n}","import popup from 'popup-js-sdk'\n\nlet config = {\n    name: \"SC Tool\",\n    contractAddress: \"none\",\n    github: \"https://github.com/edenworkroom/sctool\",\n    author: \"eden\",\n    url: document.location.href,\n    logo: document.location.protocol+\"//\"+document.location.host+\"/sctool/sctool.png\",\n}\npopup.init(config, function () {\n});\n\nexport default popup;\n","import React, {Component} from 'react';\nimport {List, Item, Button, Flex, InputItem, WingBlank, WhiteSpace} from \"antd-mobile\";\nimport {createForm} from 'rc-form';\n\nimport serojs from 'serojs'\nimport popup from \"./plugin\";\n\nconst BigNumber = require('bignumber.js');\nconst one = new BigNumber(\"1000000000000000000\")\n\nclass Input extends Component {\n    constructor(props) {\n        super(props);\n        this.valueDecorator = this.props.form.getFieldDecorator(props.input.name, {\n            rules: [],\n        });\n    }\n\n    render() {\n        return this.valueDecorator(\n            <InputItem key={this.props.input.name} type=\"text\" name={this.props.input.name}\n                       placeholder={this.props.input.type}>{this.props.input.name}</InputItem>\n        )\n    }\n}\n\nclass MethodForm extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    execute(executeData, contract) {\n        let self = this;\n        if (self.props.method.constant) {\n            popup.call(executeData, function (callData) {\n                if (callData !== \"0x\") {\n                    let res = contract.unPackData(self.props.method.name, callData);\n                    self.refs.result.innerHTML = res\n                }\n            });\n\n        } else {\n            popup.executeContract(executeData, function (res) {\n                self.refs.result.innerHTML = res\n            })\n        }\n    }\n\n    submit() {\n        let self = this;\n        let from = \"\";\n        let amount = \"0\";\n        let gasLimit = \"0\";\n        self.props.accountForm.validateFields((error, value) => {\n            from = value[\"account\"];\n            if (value[\"value\"]) {\n                amount = value[\"value\"];\n            }\n            if (value[\"gasLimit\"]) {\n                gasLimit = value[\"gasLimit\"];\n            }\n\n        });\n        let args = [];\n        self.props.form.validateFields((error, value) => {\n            this.props.method.inputs.forEach((item) => {\n                args.push(value[item.name])\n            })\n        });\n\n        let contract = serojs.callContract(this.props.contract.abi, this.props.contract.address);\n\n        try {\n            let packData = \"\";\n            if (this.props.method.name) {\n                packData = contract.packData(this.props.method.name, args);\n            }\n            let executeData = {\n                from: from,\n                to: this.props.contract.address,\n                value: \"0x\" + new BigNumber(amount).multipliedBy(one).toString(16),\n                data: packData,\n            };\n\n            if (gasLimit === \"0\" && !self.props.method.constant) {\n                popup.estimateGas(executeData, function (gasLimit) {\n                    executeData[\"gas\"] = \"0x\" + new BigNumber(gasLimit).toString(16);\n                    self.execute(executeData, contract);\n                });\n            } else {\n                executeData[\"gas\"] = \"0x\" + new BigNumber(gasLimit).toString(16);\n                self.execute(executeData, contract);\n            }\n        } catch (e) {\n            alert(e.message);\n        }\n    }\n\n    render() {\n\n        let self = this;\n        let methodName = this.props.method.name ? this.props.method.name : \"fallback\";\n        let inputItems;\n        if (this.props.method.inputs) {\n            inputItems = this.props.method.inputs.map(\n                (input) => {\n                    return <Input key={input.name} input={input} form={self.props.form}/>\n                }\n            );\n        }\n\n        return (\n            <div className=\"abi\">\n                <WhiteSpace/>\n                <List>\n                    <List.Item>\n                        <div style={{float: 'left'}}>\n                            {methodName}\n                        </div>\n                        <div style={{float: 'right'}}>\n                            <Button onClick={() => this.submit()} type=\"primary\"\n                                    inline size=\"small\"\n                                    style={{marginRight: '4px'}}>\n                                {self.props.method.constant ? \"call\" : \"transact\"}\n                            </Button>\n                        </div>\n                    </List.Item>\n                    <List.Item>\n                        {inputItems}\n                        <div ref=\"result\" style={{paddingLeft: '15px'}}></div>\n                    </List.Item>\n                </List>\n                <WhiteSpace/>\n            </div>\n        )\n    }\n}\n\nconst MForm = createForm()(MethodForm)\n\nexport class Abi extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let callItems = [];\n        let transactItems = [];\n        let self = this;\n        self.props.abi.forEach(function (item, index) {\n            if (item.type != \"constructor\" && item.type != \"event\") {\n                if (item.constant) {\n                    callItems.push(<MForm key={index} contract={self.props.contract} method={item}\n                                          accountForm={self.props.accountForm}/>)\n                } else {\n                    transactItems.push(<MForm key={index} contract={self.props.contract} method={item}\n                                              accountForm={self.props.accountForm}/>)\n                }\n            }\n        });\n        return (\n            <WingBlank>\n                {callItems}\n                {transactItems}\n            </WingBlank>\n        )\n    }\n}","import React, {Component} from 'react';\nimport {Storage, LinkedListStorage} from '../database/localstorage'\nimport {Flex, Modal, Button, WhiteSpace, List, InputItem, TextareaItem, WingBlank, Toast, NavBar} from 'antd-mobile';\nimport popup from './plugin'\n\nimport {createForm} from 'rc-form';\nimport {Abi} from \"./abi\";\n\nconst operation = Modal.operation;\n\nclass OpContractForm extends Component {\n    constructor(props) {\n        super(props);\n        this.db = Storage;\n        this.db = new LinkedListStorage(\"SC\", Storage);\n\n        let contracts = new Map();\n        let defaultContract;\n        let that = this;\n        this.db.forEach(function (item, key) {\n            if (!defaultContract) {\n                defaultContract = key;\n            }\n            const abi = JSON.parse(item.abi);\n            contracts.set(key, {name: item.name, abi: abi, address: key});\n        });\n\n        let accounts = new Map()\n        this.state = {\n            contract: defaultContract,\n            contracts: contracts\n        }\n    }\n\n    componentDidMount() {\n        let that = this;\n        let accounts = new Map();\n        let defaultAccount = \"\";\n\n\n        popup.accountList(function (data) {\n            data.forEach(function (item, index) {\n                if (index == 0) {\n                    defaultAccount = item.PK;\n                }\n                accounts.set(item.PK, {name: item.Name, balances: item.Balance})\n            });\n            that.setState({accounts: accounts, account: defaultAccount})\n        });\n    }\n\n    formatAccount = (pk, amount) => {\n        if (!amount) {\n            amount = 0;\n        }\n        if (pk) {\n            return pk.slice(0, 6) + \"....\" + pk.slice(-6) + \" (\" + amount + \")\"\n        }\n    }\n\n    showAccountList = () => {\n        let self = this;\n        let options = [];\n        this.state.accounts.forEach(function (item, pk) {\n            let balance = item.balances[\"SERO\"];\n            if (!balance) {\n                balance = 0;\n            }\n            let text = self.formatAccount(pk, balance);\n            options.push({\n                text: item.name + \":\" + text, onPress: () => {\n                    self.props.form.setFieldsValue({\"account\": pk});\n                    self.setState({account: pk});\n                }\n            });\n        });\n        operation(options);\n    }\n\n    showContractList = () => {\n        let options = [];\n        let self = this;\n        this.state.contracts.forEach(function (item, address) {\n            options.push({\n                text: item.name + \":\" + address, onPress: () => {\n                    self.setState({contract: address})\n                }\n            })\n        });\n        operation(options)\n    }\n\n    render() {\n        let contract = this.state.contracts.get(this.state.contract);\n        return (\n            <div style={{padding: '15px 0'}}>\n                <WingBlank>\n                    <WhiteSpace/>\n                    <List renderHeader={() => '选择账号'}>\n                        {\n                            this.props.form.getFieldDecorator('account', {\n                                rules: [{required: true,}], initialValue: this.state.account\n                            })(\n                                <InputItem\n                                    onClick={this.showAccountList}\n                                    name=\"account\"\n                                ></InputItem>\n                            )\n                        }\n                        {\n                            this.props.form.getFieldDecorator('value', {\n                                rules: []\n                            })(\n                                <InputItem\n                                    type=\"text\"\n                                    name=\"value\"\n                                    placeholder=\"value\"\n                                >value</InputItem>\n                            )\n                        }\n                        {\n                            this.props.form.getFieldDecorator('gasLimit', {\n                                rules: []\n                            })(\n                                <InputItem\n                                    type=\"text\"\n                                    name=\"gasLimit\"\n                                    placeholder=\"gasLimit\"\n                                >gasLimit</InputItem>\n                            )\n                        }\n                    </List>\n\n                    <WhiteSpace size=\"md\"/>\n                    <List renderHeader={() => '选择合约'}>\n                        <Button onClick={this.showContractList}>{this.state.contract}</Button>\n                    </List>\n                    <WhiteSpace/>\n                </WingBlank>\n\n                {contract && contract.abi &&\n                <Abi contract={contract} abi={contract.abi} accountForm={this.props.form}/>\n                }\n\n                <WhiteSpace/>\n            </div>\n        )\n    }\n}\n\nconst\n    OpForm = createForm()(OpContractForm)\n\nexport default OpForm\n\n","import React, {Component} from 'react';\nimport OpForm from \"../component/opform\";\n\nexport class OpContract extends Component {\n\n    constructor(props) {\n        super(props)\n\n    }\n\n    render() {\n        return (\n            <div style={{height: document.documentElement.clientHeight}}>\n                <OpForm/>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport './App.css';\nimport {HashRouter as Router, Switch, Route, Link} from 'react-router-dom';\nimport {LoadContract} from \"./views/loadcontract\";\nimport {OpContract} from \"./views/opcontract\";\nimport {NavBar, Icon, Flex} from 'antd-mobile';\n\n\nexport class App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {link: \"/load\"}\n    }\n\n    handleLink() {\n        if (this.state.link === \"/load\") {\n            this.setState({link: \"/op\"})\n        } else {\n            this.setState({link: \"/load\"})\n        }\n    }\n\n    render() {\n        return (\n            <Router>\n                <div style={{float: 'right', paddingRight: '15px'}}>\n                    <Link onClick={this.handleLink.bind(this)} key=\"op\" to={this.state.link}>\n                        <Icon type=\"right\"/>\n                    </Link>\n                </div>\n                <Switch>\n                    <Route exact path=\"/\" component={LoadContract}/>\n                    <Route exact path=\"/op\" component={OpContract}/>\n                    <Route exact path=\"/load\" component={LoadContract}/>\n                </Switch>\n            </Router>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}